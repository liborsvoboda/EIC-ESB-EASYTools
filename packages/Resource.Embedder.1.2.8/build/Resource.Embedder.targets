<?xml version="1.0" encoding="utf-8"?>
<Project ToolsVersion="4.0" xmlns="http://schemas.microsoft.com/developer/msbuild/2003">
    <PropertyGroup>
        <EmbedderSignAssembly Condition="$(EmbedderSignAssembly) == '' Or $(EmbedderSignAssembly) == '*Undefined*'">$(SignAssembly)</EmbedderSignAssembly>
        <IntermediateDir>$(ProjectDir)$(IntermediateOutputPath)</IntermediateDir>
        <EmbedderPath Condition="$(EmbedderPath) == '' Or $(EmbedderPath) == '*Undefined*'">$(MSBuildThisFileDirectory)..\</EmbedderPath>
    </PropertyGroup>
    <UsingTask TaskName="ResourceEmbedder.MsBuild.SatelliteAssemblyEmbedderTask" AssemblyFile="$(EmbedderPath)ResourceEmbedder.MsBuild.dll" />
    <UsingTask TaskName="ResourceEmbedder.MsBuild.SatelliteAssemblyCleanupTask" AssemblyFile="$(EmbedderPath)ResourceEmbedder.MsBuild.dll" />
    <!-- We want to run as soon as the satellite assemblies are generated -->
    <Target AfterTargets="GenerateSatelliteAssemblies" Name="EmbedderTarget" DependsOnTargets="$(EmbedderDependsOnTargets)">
        <ResourceEmbedder.MsBuild.SatelliteAssemblyEmbedderTask AssemblyPath="@(IntermediateAssembly)"
                                                                IntermediateDirectory="$(ProjectDir)$(IntermediateOutputPath)"
                                                                KeyFilePath="$(AssemblyOriginatorKeyFile)"
                                                                ProjectDirectory="$(ProjectDir)"
                                                                TargetPath="$(TargetPath)"
                                                                SignAssembly="$(EmbedderSignAssembly)"
                                                                References="@(ReferencePath)"
                                                                DebugSymbols="$(DebugSymbols)"
                                                                DebugType="$(DebugType)" />
    </Target>
    <!--
    Cleanup after generating. Need to selectively run depending on PostBuild:
    - When no PostBuild events exist, run directly after CoreBuild
    - Otherwise run before PostBuild events
    Reason for this: PostBuild runs directly after "CoreBuild", if we just run as "After CoreBuild"
    then PostBuild will run first, and as noted in issue #9* the user can see/copy all the resource files.
    * https://github.com/MarcStan/Resource.Embedder/issue/9
    -->
    <Target BeforeTargets="PostBuildEvent"
            Condition="'$(PostBuildEvent)' != '' and ('$(RunPostBuildEvent)' != 'OnOutputUpdated' or '$(_AssemblyTimestampBeforeCompile)' != '$(_AssemblyTimestampAfterCompile)')"
            Name="CleanupTargetBeforePostBuild"
            DependsOnTargets="$(EmbedderDependsOnTargets)">
        <Exec Command="echo CleanupBeforePostBuild" ConsoleToMSBuild="true">
          <Output TaskParameter="ConsoleOutput" PropertyName="OutputOfExec" />
        </Exec>
        <ResourceEmbedder.MsBuild.SatelliteAssemblyCleanupTask AssemblyPath="@(IntermediateAssembly)"
                                                               ProjectDirectory="$(ProjectDir)"
                                                               TargetPath="$(TargetPath)"
                                                               SignAssembly="$(EmbedderSignAssembly)" />
    </Target>
    <Target AfterTargets="CoreBuild"
            Condition="'$(PostBuildEvent)' == ''"
            Name="CleanupTargetAfterCoreBuild"
            DependsOnTargets="$(EmbedderDependsOnTargets)">
      <Exec Command="echo CleanupAfterCoreBuild" ConsoleToMSBuild="true">
          <Output TaskParameter="ConsoleOutput" PropertyName="OutputOfExec" />
        </Exec>
        <ResourceEmbedder.MsBuild.SatelliteAssemblyCleanupTask AssemblyPath="@(IntermediateAssembly)"
                                                               ProjectDirectory="$(ProjectDir)"
                                                               TargetPath="$(TargetPath)"
                                                               SignAssembly="$(EmbedderSignAssembly)" />
  </Target>

</Project>
